{"version":3,"sources":["Components/icon.png","Components/CardMaterial.js","Components/Card.js","Components/Loading.js","Components/Header.js","Container/App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","width","height","margin","borderRadius","background","ImgMediaCard","countrywise","Country","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","classes","className","Card","CardActionArea","CardContent","Typography","variant","color","countryarray","map","country","i","theme","display","marginLeft","spacing","CircularIndeterminate","CircularProgress","Header","searchChange","alt","src","icon","type","placeholder","onChange","style","App","onSearchChange","event","setState","searchfield","target","value","state","countrydetail","fetch","then","response","json","data","Countries","filteredCountry","this","filter","countryname","toLowerCase","includes","length","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2e26cfa0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.9db34808.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './CardMaterial.css';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width:\"300px\",\r\n    height:\"260px\",\r\n    margin: '40px',\r\n    borderRadius:\"4%\",\r\n    background: 'linear-gradient(90deg, #FF9A8B 0%, #FF6A88 55%, #FF99AC 100%)',\r\n\r\n  },\r\n});\r\n\r\nexport default function ImgMediaCard({countrywise}) {\r\n  const{Country, NewConfirmed,TotalConfirmed, NewDeaths, TotalDeaths, NewRecovered, TotalRecovered}=countrywise;\r\n  const classes = useStyles();\r\n  return (\r\n   <div className=\"cardcontainer\">\r\n    <Card className={classes.root} >\r\n      <CardActionArea>\r\n      <div className=\"circle\">\r\n          <div className=\"circle-inner\"></div>\r\n      </div>\r\n        <CardContent>\r\n              <div className=\"headercontainer\">\r\n                     {Country}\r\n             </div>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n           <div className=\"cardrow\">\r\n              New Confirmed :      {NewConfirmed}\r\n           </div>\r\n           <div className=\"cardrow\">\r\n              Total Confirmed :    {TotalConfirmed}\r\n           </div>\r\n           <div className=\"cardrow\">\r\n              New Deaths:          {NewDeaths}\r\n           </div>\r\n           <div className=\"cardrow\">\r\n            Total Deaths:         {TotalDeaths}\r\n           </div>\r\n           <div className=\"cardrow\">\r\n              New Recovered:      {NewRecovered}\r\n           </div>\r\n           <div className=\"cardrow\">\r\n              Total Recovered:    {TotalRecovered}\r\n           </div>\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n   </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ImgMediaCard from './CardMaterial';\r\n\r\nfunction Card({countryarray}){\r\n\treturn(\r\n        countryarray.map((country, i)=>{\r\n        \treturn( <ImgMediaCard countrywise={country}/> )\r\n        })\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport '../Container/App.css';\r\nimport icon from './icon.png';\r\n\r\nconst Header =({searchChange})=>{\r\n\treturn(\r\n     <div className=\"headbar\">\r\n      <div className =\"combined\">\r\n\t       <h1>C<img alt=\"corona-logo\" src={icon} className=\"icon-animation\"/>VIDASHB<img alt=\"corona-logo\" src={icon} className=\"icon-animation\"/>ARD</h1>\r\n\t       <input type =\"search\" placeholder=\"Type the country name here....\"\tonChange={searchChange} style ={{'border-radius':20, height: 30 , 'border-style':'none', 'width':'50%', \r\n\t       '-webkit-box-shadow': '10px 10px 24px 0px rgba(0,0,0,0.78)',\r\n           '-moz-box-shadow': '10px 10px 24px 0px rgba(0,0,0,0.78)',\r\n           'box-shadow': '10px 10px 24px 0px rgba(0,0,0,0.78)',\r\n            }}/>\r\n\t </div>\r\n     </div>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport Card from '../Components/Card';\nimport './App.css';\nimport CircularIndeterminate from '../Components/Loading';\nimport Header from '../Components/Header';\n\nclass App extends React.Component{\n\n  constructor(){\n    super();\n    this.state={\n      countrydetail: [],\n      searchfield:''\n    }\n   }\n  componentDidMount(){\n    fetch('https://api.covid19api.com/summary')\n      .then(response => response.json())\n      .then(data => this.setState({countrydetail:data.Countries}))\n  }\n\n  onSearchChange = (event) =>{\n    this.setState({searchfield:event.target.value})\n  }\n\n  render(){\n     const filteredCountry = this.state.countrydetail.filter(countryname => {\n        return countryname.Country.toLowerCase().includes(this.state.searchfield.toLowerCase());\n      })\n\n     if(this.state.countrydetail.length === 0)\n      {\n        return (<div className=\"loadbar\">\n                    <CircularIndeterminate/>\n                </div>)\n      }\n    return(\n      <div className=\"whole\"> \n         <Header searchChange={this.onSearchChange}/>\n        <div className=\"content\">\n         <Card countryarray={filteredCountry}/>\n        </div>\n       </div>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}